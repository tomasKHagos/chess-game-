#BlueJ class context
comment0.target=Piece
comment1.params=piece
comment1.target=int[][]\ Movement(greenfoot.Actor)
comment10.params=superPlayer
comment10.target=int\ switchPlayer(int)
comment11.params=
comment11.target=void\ playBoardSound()
comment12.params=index1\ index2\ pieceList
comment12.target=boolean\ captureCheck(int,\ int,\ int[][])
comment13.params=pieceList
comment13.target=boolean\ checkKing(int[][])
comment14.params=pieceList\ rowCol
comment14.target=java.util.ArrayList\ pawnCheck(int[][],\ int[])
comment15.params=pieceList\ rowCol\ queenUsingit
comment15.target=java.util.ArrayList\ bishopCheck(int[][],\ int[],\ int)
comment16.params=pieceList\ rowCol\ queenUsingit
comment16.target=java.util.ArrayList\ RookCheck(int[][],\ int[],\ int)
comment17.params=pieceList\ rowCol
comment17.target=java.util.ArrayList\ QueenCheck(int[][],\ int[])
comment18.params=pieceList\ rowCol
comment18.target=java.util.ArrayList\ knightCheck(int[][],\ int[])
comment19.params=pieceList\ rowCol
comment19.target=boolean\ kingtokingCheck(int[][],\ int[])
comment2.params=x\ y
comment2.target=int[]\ getRowCol(int,\ int)
comment20.params=pieceList
comment20.target=int[]\ findKingsPosition(int[][])
comment21.params=pieceList
comment21.target=int[][]\ listCopy(int[][])
comment22.params=pieceList
comment22.target=boolean\ checkMate(int[][])
comment23.params=row\ column\ pieceList
comment23.target=boolean\ checkCanBeCaptured(int,\ int,\ int[][])
comment24.params=row\ column\ pieceList
comment24.target=boolean\ canKingMove(int,\ int,\ int[][])
comment25.params=row\ column\ row2\ column2\ pieceList
comment25.target=boolean\ checkifKingCanEscape(int,\ int,\ int,\ int,\ int[][])
comment26.params=row\ col\ row2\ column2\ pieceList\ num
comment26.target=boolean\ movementCheckPawn(int,\ int,\ int,\ int,\ int[][],\ int)
comment27.params=row\ col\ row2\ column2\ pieceList\ num
comment27.target=boolean\ movementCheck(int,\ int,\ int,\ int,\ int[][],\ int)
comment28.params=pieceList
comment28.target=boolean\ canPawnMove(int[][])
comment29.params=pieceList\ queenUsing
comment29.target=boolean\ canRookMove(int[][],\ boolean)
comment3.params=row1\ column1\ row2\ column2
comment3.target=boolean\ islegal(int,\ int,\ int,\ int)
comment30.params=pieceList\ queenUsing
comment30.target=boolean\ canBishopMove(int[][],\ boolean)
comment31.params=pieceList
comment31.target=boolean\ knightMove(int[][])
comment32.params=pieceList
comment32.target=boolean\ canQueenMove(int[][])
comment4.params=list\ x\ y
comment4.target=boolean\ checkifempty(int[][],\ int,\ int)
comment5.params=num\ list\ initialx\ initialY\ currentX\ currentY
comment5.target=void\ updateList(int,\ int[][],\ int,\ int,\ int,\ int)
comment6.params=x1\ y1\ x2\ y2\ pieceList
comment6.target=boolean\ checkifjump(int,\ int,\ int,\ int,\ int[][])
comment7.params=row1\ column1\ row2\ column2\ pieceList
comment7.target=boolean\ bishopjumpcheck(int,\ int,\ int,\ int,\ int[][])
comment8.params=row1\ column1\ row2\ column2\ piecesList
comment8.target=boolean\ RookJumpCheck(int,\ int,\ int,\ int,\ int[][])
comment9.params=Superplayer\ player
comment9.target=boolean\ checkPlayer(int,\ int)
numComments=33
